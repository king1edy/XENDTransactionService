// <auto-generated />
using System;
using HNIExceptionNotification.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HNIExceptionNotification.Core.Migrations
{
    [DbContext(typeof(TemplateDDD.Core.AppDbContext))]
    [Migration("20230116121308_changed reference Id")]
    partial class changedreferenceId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HNIExceptionNotification.Data.Entities.MonitoringFailedHNITxn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserMessage")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("MonitoringFailedHNITxns", "dbo");
                });

            modelBuilder.Entity("HNIExceptionNotification.Data.Entities.MonitoringFailedHNITxnEx", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEmailSent")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEmailSent")
                        .HasMaxLength(10)
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcessed")
                        .HasMaxLength(10)
                        .HasColumnType("bit");

                    b.Property<Guid?>("MonitoringFailedHNITxnId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RetryCount")
                        .HasMaxLength(2147483647)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonitoringFailedHNITxnId");

                    b.ToTable("MonitoringFailedHNITxnExs", "dbo");
                });

            modelBuilder.Entity("HNIExceptionNotification.Data.Entities.MonitoringFailedHNITxnEx", b =>
                {
                    b.HasOne("HNIExceptionNotification.Data.Entities.MonitoringFailedHNITxn", "MonitoringFailedHNITxn")
                        .WithMany()
                        .HasForeignKey("MonitoringFailedHNITxnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonitoringFailedHNITxn");
                });
#pragma warning restore 612, 618
        }
    }
}
